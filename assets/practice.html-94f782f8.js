import{_ as l,r as i,o,c,a,d as n,b as e,e as t}from"./app-add35868.js";const p={},r=a("h2",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),n(" 安装")],-1),d={href:"https://reactnative.cn/docs/environment-setup",target:"_blank",rel:"noopener noreferrer"},u=t(`<strong>注意</strong><ul><li>搭建过程中<code>pod install</code>实在过于缓慢，和网速以及代理配置有相当大的关系</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy socks5://127.0.0.1:1080
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.https://github.com.proxy socks5://127.0.0.1:1080
<span class="token comment"># 设置代理的作用无法确定，每天尝试pod install用了整整一星期，实在不确定到底代理有无生效和作用</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.proxy
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.https://github.com.proxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),v={href:"https://stackoverflow.com/questions/72768245/typeerror-cli-init-is-not-a-function-for-react-native",target:"_blank",rel:"noopener noreferrer"},k=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 解决方案 使用react-native@0.68.2</span>
npx react-native init AwesomeProject <span class="token parameter variable">--version</span> <span class="token number">0.68</span>.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=a("h2",{id:"打包发布事宜",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#打包发布事宜","aria-hidden":"true"},"#"),n(" 打包发布事宜")],-1),m=a("p",null,"参考文章",-1),h={href:"https://blog.csdn.net/ych1274816963/article/details/120967009",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.jianshu.com/p/727c6057fc0a",target:"_blank",rel:"noopener noreferrer"},_={href:"https://icon.wuruihong.com/",target:"_blank",rel:"noopener noreferrer"},f=t(`<h3 id="android" tabindex="-1"><a class="header-anchor" href="#android" aria-hidden="true">#</a> Android</h3><h3 id="打包流程" tabindex="-1"><a class="header-anchor" href="#打包流程" aria-hidden="true">#</a> 打包流程</h3><ul><li><p>第一步：生成一个签名密钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>keytool <span class="token parameter variable">-genkeypair</span> <span class="token parameter variable">-v</span> <span class="token parameter variable">-storetype</span> PKCS12 <span class="token parameter variable">-keystore</span> my-release-key.keystore <span class="token parameter variable">-alias</span> my-key-alias <span class="token parameter variable">-keyalg</span> RSA <span class="token parameter variable">-keysize</span> <span class="token number">2048</span> <span class="token parameter variable">-validity</span> <span class="token number">10000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>第二步：设置 gradle 变量</p><ul><li>把my-release-key.keystore文件放到你工程中的android/app文件夹下。</li><li>编辑~/.gradle/gradle.properties（全局配置，对所有项目有效）或是项目目录/android/gradle.properties（项目配置，只对所在项目有效）。如果没有gradle.properties文件你就自己创建一个，添加如下的代码（注意把其中的****替换为相应密码）</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">MYAPP_RELEASE_STORE_FILE</span><span class="token operator">=</span>my-release-key.keystore
<span class="token assign-left variable">MYAPP_RELEASE_KEY_ALIAS</span><span class="token operator">=</span>my-key-alias
<span class="token assign-left variable">MYAPP_RELEASE_STORE_PASSWORD</span><span class="token operator">=</span>*****
<span class="token assign-left variable">MYAPP_RELEASE_KEY_PASSWORD</span><span class="token operator">=</span>*****
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>第三步：把签名配置加入到项目的 gradle 配置中</p></li></ul><blockquote><p>编辑你项目目录下的android/app/build.gradle，添加如下的签名配置：</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
android <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    defaultConfig <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
    signingConfigs <span class="token punctuation">{</span>
        release <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>project<span class="token punctuation">.</span><span class="token function">hasProperty</span><span class="token punctuation">(</span><span class="token string">&#39;MYAPP_RELEASE_STORE_FILE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                storeFile <span class="token function">file</span><span class="token punctuation">(</span><span class="token constant">MYAPP_RELEASE_STORE_FILE</span><span class="token punctuation">)</span>
                storePassword <span class="token constant">MYAPP_RELEASE_STORE_PASSWORD</span>
                keyAlias <span class="token constant">MYAPP_RELEASE_KEY_ALIAS</span>
                keyPassword <span class="token constant">MYAPP_RELEASE_KEY_PASSWORD</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    buildTypes <span class="token punctuation">{</span>
        release <span class="token punctuation">{</span>
            <span class="token operator">...</span>
            signingConfig signingConfigs<span class="token punctuation">.</span>release
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第四步：生成发行APK包</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> android
./gradlew clean
./gradlew assembleRelease
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="修改应用名称和图标" tabindex="-1"><a class="header-anchor" href="#修改应用名称和图标" aria-hidden="true">#</a> 修改应用名称和图标</h4><ul><li>修改：android/app/src/main/res/values/strings.xml</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>
-    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app_name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>
+    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app_name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>测试程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>   
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>生成好图标文件后替换<code>android/app/src/main/res</code>对应文件</li></ul><h3 id="ios" tabindex="-1"><a class="header-anchor" href="#ios" aria-hidden="true">#</a> IOS</h3><h4 id="打包流程-1" tabindex="-1"><a class="header-anchor" href="#打包流程-1" aria-hidden="true">#</a> 打包流程</h4><ul><li>第一步：首先在package.json里设置bundle-ios命令，在package.json里的scripts添加如下代码</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;bundle-ios&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node node_modules/react-native/local-cli/cli.js bundle --entry-file index.js --platform ios --dev false --bundle-output ./ios/bundle/main.jsbundle --assets-dest ./ios/bundle&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>第二步：在ios文件目录下创建bundle文件夹</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> bundle-ios
<span class="token comment"># 等待bundle文件下生成assets和其他相关文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第三步：通过xcode打开<code>project.xcworkspace</code>项目</li><li>第四步：在xcode中右击项目名称，点击<code>Add Files To ....</code></li><li>第五步：<code>Product-Scheme-Edit Scheme</code> 修改 <code>Run</code> 和 <code>Archive</code> 的 <code>Build Configuration</code> 为 <code>Release</code></li><li>第六步：开始打包 <ul><li>Product-&gt;Archive</li><li>Distribute APP</li></ul></li></ul><h4 id="修改应用名称和图标-1" tabindex="-1"><a class="header-anchor" href="#修改应用名称和图标-1" aria-hidden="true">#</a> 修改应用名称和图标</h4><ul><li>修改名称：在xcode里根据图形化界面的提示修改 <code>DisplayName、Bundle Display Name</code> 等</li><li>生成好图标文件后替换<code>ios/test/Images.xcassets/AppIcon.appiconset</code>中的内容</li></ul><h3 id="安卓给空包签名" tabindex="-1"><a class="header-anchor" href="#安卓给空包签名" aria-hidden="true">#</a> 安卓给空包签名</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>jarsigner <span class="token parameter variable">-verbose</span> <span class="token parameter variable">-keystore</span> <span class="token punctuation">[</span>你签名的位置<span class="token punctuation">]</span> <span class="token parameter variable">-signedjar</span> <span class="token punctuation">[</span>要生成的签名包<span class="token punctuation">]</span> <span class="token punctuation">[</span>未签名的包<span class="token punctuation">]</span> <span class="token punctuation">[</span>你签名的alias<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="热更新方案-code-push" tabindex="-1"><a class="header-anchor" href="#热更新方案-code-push" aria-hidden="true">#</a> 热更新方案 Code Push</h2><p>https://github.com/microsoft/react-native-code-push</p><p>https://learn.microsoft.com/en-us/appcenter/cli/</p><p>按步骤操作</p>`,26);function E(x,y){const s=i("ExternalLinkIcon");return o(),c("div",null,[r,a("blockquote",null,[a("p",null,[n("按照"),a("a",d,[n("官方搭建环境方案"),e(s)]),n("搭建开发环境")])]),a("ul",null,[a("li",null,[u,a("ul",null,[a("li",null,[n("react-natvie@0.69.0 有一个bug，参考"),a("a",v,[n("stackOverflow"),e(s)])])]),k])]),b,a("blockquote",null,[m,a("ul",null,[a("li",null,[n("打包流程："),a("a",h,[n("https://blog.csdn.net/ych1274816963/article/details/120967009"),e(s)])]),a("li",null,[n("设置图标启动页："),a("a",g,[n("https://www.jianshu.com/p/727c6057fc0a"),e(s)])]),a("li",null,[n("图标生成："),a("a",_,[n("https://icon.wuruihong.com/"),e(s)])])])]),f])}const P=l(p,[["render",E],["__file","practice.html.vue"]]);export{P as default};
