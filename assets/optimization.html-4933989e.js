import{_ as l,o as i,c as t,e}from"./app-add35868.js";const o={},p=e("<p>一、前言</p><p>二、为什么需要前端性能优化</p><p>三、前端性能优化的目标</p><p>四、前端性能优化的方法</p><ol><li>减少 HTTP 请求次数 <ul><li>合并文件</li><li>使用雪碧图</li><li>使用字体图标</li><li>使用 Base64 编码</li></ul></li><li>压缩文件大小 <ul><li>压缩图片</li><li>压缩 JavaScript 和 CSS 文件</li></ul></li><li>使用缓存 <ul><li>浏览器缓存</li><li>服务器缓存</li></ul></li><li>减少 DOM 操作</li><li>使用异步加载 <ul><li>异步加载 JavaScript</li><li>异步加载 CSS</li></ul></li><li>优化 JavaScript 代码 <ul><li>避免使用全局变量</li><li>避免使用 with 语句</li><li>避免使用 eval 函数</li><li>避免使用 document.write 函数</li></ul></li><li>优化 CSS 代码 <ul><li>避免使用 @import</li><li>避免使用 * 选择器</li><li>避免使用 !important</li></ul></li><li>优化图片 <ul><li>使用适当的图片格式</li><li>使用响应式图片</li><li>使用懒加载</li></ul></li></ol><p>五、前端性能优化的工具</p><ol><li>PageSpeed Insights</li><li>YSlow</li><li>WebPageTest</li><li>GTmetrix</li><li>Pingdom</li></ol><p>六、总结</p><p>七、参考文献</p>",9),a=[p];function c(u,n){return i(),t("div",null,a)}const s=l(o,[["render",c],["__file","optimization.html.vue"]]);export{s as default};
