import{_ as e,o as s,c as i,e as a}from"./app-add35868.js";const n={},l=a(`<p>一、什么是Vite</p><p>Vite是一款基于ES modules的构建工具和开发服务器，它的目标是提供快速的开发体验。Vite的主要特点是：</p><ol><li><p>快速的冷启动：Vite使用原生ES模块导入，无需打包，因此启动速度非常快。</p></li><li><p>实时模块热更新：Vite支持实时模块热更新，可以在不刷新浏览器的情况下更新代码。</p></li><li><p>简单的配置：Vite的配置非常简单，只需要一个vite.config.js文件即可。</p></li><li><p>支持多种语言：Vite支持多种语言，包括JavaScript、TypeScript、CSS、SCSS、Less等。</p></li><li><p>支持多种框架：Vite支持多种框架，包括Vue、React、Angular等。</p></li></ol><p>二、Vite的安装和使用</p><ol><li>安装Vite</li></ol><p>可以使用npm或yarn安装Vite：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> global <span class="token function">add</span> vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>创建项目</li></ol><p>可以使用Vite创建一个新项目：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vite create my-project
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个命令会创建一个新的项目，并安装所有必要的依赖。</p><ol start="3"><li>启动开发服务器</li></ol><p>可以使用以下命令启动开发服务器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> my-project
<span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> my-project
<span class="token function">yarn</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个命令会启动一个开发服务器，并在浏览器中打开一个新的窗口。</p><ol start="4"><li>构建项目</li></ol><p>可以使用以下命令构建项目：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个命令会将项目打包成一个可部署的文件。</p><p>三、Vite的配置</p><p>Vite的配置非常简单，只需要一个vite.config.js文件即可。以下是一个简单的配置示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 配置选项</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Vite的配置选项非常多，以下是一些常用的配置选项：</p><ol><li><p>root：指定项目的根目录。</p></li><li><p>base：指定项目的基础路径。</p></li><li><p>plugins：指定要使用的插件。</p></li><li><p>server：指定开发服务器的配置。</p></li><li><p>build：指定构建的配置。</p></li></ol><p>四、Vite的插件</p><p>Vite支持使用插件来扩展其功能。以下是一些常用的Vite插件：</p><ol><li><p>@vitejs/plugin-vue：用于支持Vue单文件组件。</p></li><li><p>@vitejs/plugin-react-refresh：用于支持React的热更新。</p></li><li><p>@vitejs/plugin-typescript：用于支持TypeScript。</p></li><li><p>@vitejs/plugin-legacy：用于支持旧版浏览器。</p></li><li><p>@vitejs/plugin-svg：用于支持SVG文件。</p></li></ol><p>五、总结</p><p>Vite是一个快速的构建工具和开发服务器，它的主要特点是快速的冷启动和实时模块热更新。Vite的配置非常简单，只需要一个vite.config.js文件即可。Vite还支持使用插件来扩展其功能。</p>`,35),p=[l];function t(d,c){return s(),i("div",null,p)}const o=e(n,[["render",t],["__file","vite.html.vue"]]);export{o as default};
