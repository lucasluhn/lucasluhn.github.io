import{_ as l,o as i,c as a,e as t}from"./app-add35868.js";const e={},o=t("<p>一、Java基础</p><ol><li>Java概述 1.1 Java的历史 1.2 Java的特点 1.3 Java的应用领域</li><li>Java开发环境搭建 2.1 JDK的安装 2.2 Eclipse的安装 2.3 第一个Java程序</li><li>Java基本语法 3.1 数据类型 3.2 变量 3.3 运算符 3.4 控制语句 3.5 数组</li><li>面向对象编程 4.1 类和对象 4.2 封装 4.3 继承 4.4 多态</li><li>异常处理 5.1 异常的概念 5.2 异常处理机制 5.3 自定义异常</li></ol><p>二、Java高级</p><ol><li>集合框架 1.1 Collection接口 1.2 List接口 1.3 Set接口 1.4 Map接口</li><li>IO流 2.1 字节流和字符流 2.2 文件读写 2.3 序列化和反序列化</li><li>多线程 3.1 线程的概念 3.2 线程的创建和启动 3.3 线程的同步和互斥 3.4 线程的通信</li><li>网络编程 4.1 Socket编程 4.2 URL编程 4.3 HTTP编程</li><li>数据库编程 5.1 JDBC的概念 5.2 JDBC的使用 5.3 数据库连接池</li></ol><p>三、JavaWeb</p><ol><li>Servlet 1.1 Servlet的概念 1.2 Servlet的生命周期 1.3 Servlet的配置</li><li>JSP 2.1 JSP的概念 2.2 JSP的语法 2.3 JSP的内置对象</li><li>MVC模式 3.1 MVC的概念 3.2 MVC的实现</li><li>Struts2框架 4.1 Struts2的概念 4.2 Struts2的配置 4.3 Struts2的使用</li><li>Spring框架 5.1 Spring的概念 5.2 Spring的配置 5.3 Spring的使用</li></ol><p>四、其他</p><ol><li>设计模式 1.1 设计模式的概念 1.2 单例模式 1.3 工厂模式 1.4 观察者模式</li><li>常用工具类 2.1 String类 2.2 Math类 2.3 Date类 2.4 Calendar类</li><li>注解 3.1 注解的概念 3.2 注解的使用</li><li>Lambda表达式 4.1 Lambda表达式的概念 4.2 Lambda表达式的使用</li><li>Java8新特性 5.1 接口的默认方法和静态方法 5.2 Lambda表达式 5.3 Stream API</li></ol>",8),r=[o];function S(c,n){return i(),a("div",null,r)}const v=l(e,[["render",S],["__file","java.html.vue"]]);export{v as default};
